// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/lib/prisma-client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  User
  Admin
}

model User {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  password    String
  avatar      String
  role        Role         @default(User)
  verified    Boolean      @default(false)
  otp         Int?
  otp_expiry  DateTime?
  courses     Course[]
  enrollments Enrollment[]
  created_at  DateTime     @default(now())
  updated_at  DateTime     @updatedAt
}

model Course {
  id    String @id @default(ulid())
  title String
  slug  String @unique

  createdById String
  createdBy   User   @relation(fields: [createdById], references: [id])

  enrollments Enrollment[]
  created_at  DateTime     @default(now())

  updated_at DateTime @updatedAt
}

model Enrollment {
  id String @id @default(uuid())

  User     User?   @relation(fields: [userId], references: [id])
  userId   String
  Course   Course? @relation(fields: [courseId], references: [id])
  courseId String?
  progress Float   @default(0.0)

  joined_at  DateTime         @default(now())
  updated_at DateTime         @updatedAt
  status     EnrollmentStatus @default(ENROLLED)

  @@unique([userId, courseId])
}

enum EnrollmentStatus {
  ENROLLED
  COMPLETED
  DROPPED
}
